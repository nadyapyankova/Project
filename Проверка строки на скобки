class Stack:
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items) - 1]

    def size(self):
        return len(self.items)


l = input('Программа проверит, все ли скобки правильно закрыты, если нет - выведет номер последнего символа, где ошибка. Введите строку со скобками (){}[]:')
s = Stack()
index = []
def check_brackets(l):
    for i in range(len(l)):
        if l[i] in '[](){}':
            if l[i] in '({[':
                s.push(l[i])
                index.append(i)
            else:
                if s.isEmpty():
                    return i + 1
                elif s.peek() + l[i] == '()' or s.peek() + l[i] == '[]' or s.peek() + l[i] == '{}':
                    s.pop()
                    index.pop()
                else:
                    return i + 1
    if s.size() != 0:
        return index[-1] + 1
    else:
        return 'Success'
print(check_brackets(l))
